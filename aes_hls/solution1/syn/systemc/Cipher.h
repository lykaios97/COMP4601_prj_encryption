// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Cipher_HH_
#define _Cipher_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MixColumns.h"
#include "AddRoundKey.h"
#include "ShiftRows.h"
#include "SubBytes.h"
#include "Cipher_state_V.h"

namespace ap_rtl {

struct Cipher : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > in_V_address0;
    sc_out< sc_logic > in_V_ce0;
    sc_in< sc_lv<8> > in_V_q0;
    sc_out< sc_lv<4> > out_V_address0;
    sc_out< sc_logic > out_V_ce0;
    sc_out< sc_logic > out_V_we0;
    sc_out< sc_lv<8> > out_V_d0;
    sc_out< sc_lv<6> > w_V_address0;
    sc_out< sc_logic > w_V_ce0;
    sc_in< sc_lv<32> > w_V_q0;


    // Module declarations
    Cipher(sc_module_name name);
    SC_HAS_PROCESS(Cipher);

    ~Cipher();

    sc_trace_file* mVcdFile;

    Cipher_state_V* state_V_U;
    MixColumns* grp_MixColumns_fu_138;
    AddRoundKey* grp_AddRoundKey_fu_143;
    ShiftRows* grp_ShiftRows_fu_153;
    SubBytes* grp_SubBytes_fu_158;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_fu_171_p2;
    sc_signal< sc_lv<5> > i_reg_279;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > trunc_ln150_1_reg_284;
    sc_signal< sc_lv<1> > icmp_ln149_fu_165_p2;
    sc_signal< sc_lv<2> > trunc_ln321_fu_187_p1;
    sc_signal< sc_lv<2> > trunc_ln321_reg_289;
    sc_signal< sc_lv<8> > zext_ln158_fu_221_p1;
    sc_signal< sc_lv<8> > zext_ln158_reg_302;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > round_fu_226_p2;
    sc_signal< sc_lv<4> > round_reg_307;
    sc_signal< sc_lv<5> > i_1_fu_238_p2;
    sc_signal< sc_lv<5> > i_1_reg_315;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > icmp_ln165_fu_232_p2;
    sc_signal< sc_lv<4> > state_V_address0;
    sc_signal< sc_logic > state_V_ce0;
    sc_signal< sc_logic > state_V_we0;
    sc_signal< sc_lv<8> > state_V_d0;
    sc_signal< sc_lv<8> > state_V_q0;
    sc_signal< sc_logic > state_V_ce1;
    sc_signal< sc_logic > state_V_we1;
    sc_signal< sc_lv<8> > state_V_q1;
    sc_signal< sc_logic > grp_MixColumns_fu_138_ap_start;
    sc_signal< sc_logic > grp_MixColumns_fu_138_ap_done;
    sc_signal< sc_logic > grp_MixColumns_fu_138_ap_idle;
    sc_signal< sc_logic > grp_MixColumns_fu_138_ap_ready;
    sc_signal< sc_lv<4> > grp_MixColumns_fu_138_state_V_address0;
    sc_signal< sc_logic > grp_MixColumns_fu_138_state_V_ce0;
    sc_signal< sc_logic > grp_MixColumns_fu_138_state_V_we0;
    sc_signal< sc_lv<8> > grp_MixColumns_fu_138_state_V_d0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_ap_start;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_ap_done;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_ap_idle;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_ap_ready;
    sc_signal< sc_lv<4> > grp_AddRoundKey_fu_143_state_V_address0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_state_V_ce0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_state_V_we0;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_143_state_V_d0;
    sc_signal< sc_lv<6> > grp_AddRoundKey_fu_143_roundKey_V_address0;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_roundKey_V_ce0;
    sc_signal< sc_lv<8> > grp_AddRoundKey_fu_143_roundKey_V_offset;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_ap_start;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_ap_done;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_ap_idle;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_ap_ready;
    sc_signal< sc_lv<4> > grp_ShiftRows_fu_153_state_V_address0;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_state_V_ce0;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_state_V_we0;
    sc_signal< sc_lv<8> > grp_ShiftRows_fu_153_state_V_d0;
    sc_signal< sc_lv<4> > grp_ShiftRows_fu_153_state_V_address1;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_state_V_ce1;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_state_V_we1;
    sc_signal< sc_lv<8> > grp_ShiftRows_fu_153_state_V_d1;
    sc_signal< sc_logic > grp_SubBytes_fu_158_ap_start;
    sc_signal< sc_logic > grp_SubBytes_fu_158_ap_done;
    sc_signal< sc_logic > grp_SubBytes_fu_158_ap_idle;
    sc_signal< sc_logic > grp_SubBytes_fu_158_ap_ready;
    sc_signal< sc_lv<4> > grp_SubBytes_fu_158_state_V_address0;
    sc_signal< sc_logic > grp_SubBytes_fu_158_state_V_ce0;
    sc_signal< sc_logic > grp_SubBytes_fu_158_state_V_we0;
    sc_signal< sc_lv<8> > grp_SubBytes_fu_158_state_V_d0;
    sc_signal< sc_lv<5> > i_0_reg_103;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > round_0_reg_114;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<5> > i4_0_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > grp_MixColumns_fu_138_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > grp_AddRoundKey_fu_143_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > grp_ShiftRows_fu_153_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > grp_SubBytes_fu_158_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln154_fu_207_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > zext_ln150_fu_191_p1;
    sc_signal< sc_lv<64> > zext_ln321_fu_202_p1;
    sc_signal< sc_lv<64> > zext_ln321_2_fu_266_p1;
    sc_signal< sc_lv<64> > zext_ln166_fu_271_p1;
    sc_signal< sc_lv<4> > tmp_6_fu_196_p3;
    sc_signal< sc_lv<6> > shl_ln_fu_213_p3;
    sc_signal< sc_lv<2> > trunc_ln321_2_fu_254_p1;
    sc_signal< sc_lv<2> > trunc_ln166_1_fu_244_p4;
    sc_signal< sc_lv<4> > tmp_8_fu_258_p3;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_state3;
    static const sc_lv<19> ap_ST_fsm_state4;
    static const sc_lv<19> ap_ST_fsm_state5;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_state7;
    static const sc_lv<19> ap_ST_fsm_state8;
    static const sc_lv<19> ap_ST_fsm_state9;
    static const sc_lv<19> ap_ST_fsm_state10;
    static const sc_lv<19> ap_ST_fsm_state11;
    static const sc_lv<19> ap_ST_fsm_state12;
    static const sc_lv<19> ap_ST_fsm_state13;
    static const sc_lv<19> ap_ST_fsm_state14;
    static const sc_lv<19> ap_ST_fsm_state15;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_state17;
    static const sc_lv<19> ap_ST_fsm_state18;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_28;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_AddRoundKey_fu_143_ap_start();
    void thread_grp_AddRoundKey_fu_143_roundKey_V_offset();
    void thread_grp_MixColumns_fu_138_ap_start();
    void thread_grp_ShiftRows_fu_153_ap_start();
    void thread_grp_SubBytes_fu_158_ap_start();
    void thread_i_1_fu_238_p2();
    void thread_i_fu_171_p2();
    void thread_icmp_ln149_fu_165_p2();
    void thread_icmp_ln154_fu_207_p2();
    void thread_icmp_ln165_fu_232_p2();
    void thread_in_V_address0();
    void thread_in_V_ce0();
    void thread_out_V_address0();
    void thread_out_V_ce0();
    void thread_out_V_d0();
    void thread_out_V_we0();
    void thread_round_fu_226_p2();
    void thread_shl_ln_fu_213_p3();
    void thread_state_V_address0();
    void thread_state_V_ce0();
    void thread_state_V_ce1();
    void thread_state_V_d0();
    void thread_state_V_we0();
    void thread_state_V_we1();
    void thread_tmp_6_fu_196_p3();
    void thread_tmp_8_fu_258_p3();
    void thread_trunc_ln166_1_fu_244_p4();
    void thread_trunc_ln321_2_fu_254_p1();
    void thread_trunc_ln321_fu_187_p1();
    void thread_w_V_address0();
    void thread_w_V_ce0();
    void thread_zext_ln150_fu_191_p1();
    void thread_zext_ln158_fu_221_p1();
    void thread_zext_ln166_fu_271_p1();
    void thread_zext_ln321_2_fu_266_p1();
    void thread_zext_ln321_fu_202_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
