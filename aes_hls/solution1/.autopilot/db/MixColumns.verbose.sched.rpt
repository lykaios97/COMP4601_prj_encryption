

================================================================
== Vivado HLS Report for 'MixColumns'
================================================================
* Date:           Tue Jul 15 22:53:40 2025

* Version:        2020.1.1 (Build 2951007 on Wed Aug 05 23:24:06 MDT 2020)
* Project:        aes_hls
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 2.795 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      101|      101| 1.010 us | 1.010 us |  101|  101|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |      100|      100|        25|          -|          -|     4|    no    |
        | + Loop 1.1  |        8|        8|         2|          -|          -|     4|    no    |
        | + Loop 1.2  |        4|        4|         1|          -|          -|     4|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 5 
4 --> 3 
5 --> 6 
6 --> 6 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%lhs_V_1 = alloca i8"   --->   Operation 7 'alloca' 'lhs_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%rhs_V_1 = alloca i8"   --->   Operation 8 'alloca' 'rhs_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%rhs_V_2 = alloca i8"   --->   Operation 9 'alloca' 'rhs_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%rhs_V_5 = alloca i8"   --->   Operation 10 'alloca' 'rhs_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.18ns)   --->   "br label %.loopexit" [AES_hls_cpp/aes_cipher.cpp:97]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 1.18>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %c, %.loopexit.loopexit ]"   --->   Operation 12 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.86ns)   --->   "%icmp_ln97 = icmp eq i3 %c_0, -4" [AES_hls_cpp/aes_cipher.cpp:97]   --->   Operation 13 'icmp' 'icmp_ln97' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.18ns)   --->   "%c = add i3 %c_0, 1" [AES_hls_cpp/aes_cipher.cpp:97]   --->   Operation 15 'add' 'c' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln97, label %5, label %.preheader.preheader" [AES_hls_cpp/aes_cipher.cpp:97]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln99 = zext i3 %c_0 to i6" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 17 'zext' 'zext_ln99' <Predicate = (!icmp_ln97)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.18ns)   --->   "br label %.preheader" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 18 'br' <Predicate = (!icmp_ln97)> <Delay = 1.18>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "ret void" [AES_hls_cpp/aes_cipher.cpp:108]   --->   Operation 19 'ret' <Predicate = (icmp_ln97)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.79>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %.preheader.preheader ], [ %r, %.preheader.backedge ]"   --->   Operation 20 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.86ns)   --->   "%icmp_ln99 = icmp eq i3 %r_0, -4" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 21 'icmp' 'icmp_ln99' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 22 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (1.18ns)   --->   "%r = add i3 %r_0, 1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 23 'add' 'r' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %icmp_ln99, label %2, label %1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 24 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_4 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %r_0, i2 0)" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 25 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln321 = zext i5 %tmp_4 to i6" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 26 'zext' 'zext_ln321' <Predicate = (!icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (1.36ns)   --->   "%add_ln321 = add i6 %zext_ln321, %zext_ln99" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 27 'add' 'add_ln321' <Predicate = (!icmp_ln99)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln321_1 = zext i6 %add_ln321 to i64" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 28 'zext' 'zext_ln321_1' <Predicate = (!icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%state_V_addr = getelementptr [16 x i8]* %state_V, i64 0, i64 %zext_ln321_1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 29 'getelementptr' 'state_V_addr' <Predicate = (!icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 30 [2/2] (1.42ns)   --->   "%a_0_V = load i8* %state_V_addr, align 1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 30 'load' 'a_0_V' <Predicate = (!icmp_ln99)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln321 = trunc i3 %r_0 to i2" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 31 'trunc' 'trunc_ln321' <Predicate = (!icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%lhs_V_1_load = load i8* %lhs_V_1" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 32 'load' 'lhs_V_1_load' <Predicate = (icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%rhs_V_1_load = load i8* %rhs_V_1" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 33 'load' 'rhs_V_1_load' <Predicate = (icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%rhs_V_2_load = load i8* %rhs_V_2" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 34 'load' 'rhs_V_2_load' <Predicate = (icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%rhs_V_5_load = load i8* %rhs_V_5" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 35 'load' 'rhs_V_5_load' <Predicate = (icmp_ln99)> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (2.65ns)   --->   "%lhs_V = call fastcc i8 @gmul(i3 2, i8 %lhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 36 'call' 'lhs_V' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 37 [2/2] (2.65ns)   --->   "%rhs_V = call fastcc i8 @gmul(i3 3, i8 %rhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 37 'call' 'rhs_V' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 38 [2/2] (2.65ns)   --->   "%rhs_V_3 = call fastcc i8 @gmul(i3 2, i8 %rhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 38 'call' 'rhs_V_3' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 39 [2/2] (2.65ns)   --->   "%rhs_V_4 = call fastcc i8 @gmul(i3 3, i8 %rhs_V_2_load)" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 39 'call' 'rhs_V_4' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 40 [2/2] (2.65ns)   --->   "%rhs_V_6 = call fastcc i8 @gmul(i3 2, i8 %rhs_V_2_load)" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 40 'call' 'rhs_V_6' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 41 [2/2] (2.65ns)   --->   "%rhs_V_7 = call fastcc i8 @gmul(i3 3, i8 %rhs_V_5_load)" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 41 'call' 'rhs_V_7' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 42 [2/2] (2.65ns)   --->   "%lhs_V_2 = call fastcc i8 @gmul(i3 3, i8 %lhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 42 'call' 'lhs_V_2' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 43 [2/2] (2.65ns)   --->   "%rhs_V_8 = call fastcc i8 @gmul(i3 2, i8 %rhs_V_5_load)" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 43 'call' 'rhs_V_8' <Predicate = (icmp_ln99)> <Delay = 2.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.42>
ST_4 : Operation 44 [1/2] (1.42ns)   --->   "%a_0_V = load i8* %state_V_addr, align 1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 44 'load' 'a_0_V' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 45 [1/1] (1.12ns)   --->   "switch i2 %trunc_ln321, label %branch3 [
    i2 0, label %..preheader.backedge_crit_edge
    i2 1, label %branch1
    i2 -2, label %branch2
  ]" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 45 'switch' <Predicate = true> <Delay = 1.12>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "store i8 %a_0_V, i8* %rhs_V_2" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 46 'store' <Predicate = (trunc_ln321 == 2)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 47 'br' <Predicate = (trunc_ln321 == 2)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "store i8 %a_0_V, i8* %rhs_V_1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 48 'store' <Predicate = (trunc_ln321 == 1)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 49 'br' <Predicate = (trunc_ln321 == 1)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "store i8 %a_0_V, i8* %lhs_V_1" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 50 'store' <Predicate = (trunc_ln321 == 0)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 51 'br' <Predicate = (trunc_ln321 == 0)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "store i8 %a_0_V, i8* %rhs_V_5" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 52 'store' <Predicate = (trunc_ln321 == 3)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [AES_hls_cpp/aes_cipher.cpp:99]   --->   Operation 53 'br' <Predicate = (trunc_ln321 == 3)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br label %.preheader"   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 1.18>
ST_5 : Operation 55 [1/2] (0.00ns)   --->   "%lhs_V = call fastcc i8 @gmul(i3 2, i8 %lhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 55 'call' 'lhs_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 56 [1/2] (0.00ns)   --->   "%rhs_V = call fastcc i8 @gmul(i3 3, i8 %rhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 56 'call' 'rhs_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%xor_ln1357 = xor i8 %rhs_V, %lhs_V" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 57 'xor' 'xor_ln1357' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%xor_ln1357_1 = xor i8 %rhs_V_2_load, %rhs_V_5_load" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 58 'xor' 'xor_ln1357_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.66ns) (out node of the LUT)   --->   "%ret_V = xor i8 %xor_ln1357_1, %xor_ln1357" [AES_hls_cpp/aes_cipher.cpp:101]   --->   Operation 59 'xor' 'ret_V' <Predicate = true> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/2] (0.00ns)   --->   "%rhs_V_3 = call fastcc i8 @gmul(i3 2, i8 %rhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 60 'call' 'rhs_V_3' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 61 [1/2] (0.00ns)   --->   "%rhs_V_4 = call fastcc i8 @gmul(i3 3, i8 %rhs_V_2_load)" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 61 'call' 'rhs_V_4' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node ret_V_1)   --->   "%xor_ln1357_3 = xor i8 %rhs_V_5_load, %lhs_V_1_load" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 62 'xor' 'xor_ln1357_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node ret_V_1)   --->   "%xor_ln1357_4 = xor i8 %rhs_V_3, %rhs_V_4" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 63 'xor' 'xor_ln1357_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.66ns) (out node of the LUT)   --->   "%ret_V_1 = xor i8 %xor_ln1357_4, %xor_ln1357_3" [AES_hls_cpp/aes_cipher.cpp:102]   --->   Operation 64 'xor' 'ret_V_1' <Predicate = true> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/2] (0.00ns)   --->   "%rhs_V_6 = call fastcc i8 @gmul(i3 2, i8 %rhs_V_2_load)" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 65 'call' 'rhs_V_6' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 66 [1/2] (0.00ns)   --->   "%rhs_V_7 = call fastcc i8 @gmul(i3 3, i8 %rhs_V_5_load)" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 66 'call' 'rhs_V_7' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node ret_V_2)   --->   "%xor_ln1357_6 = xor i8 %rhs_V_1_load, %lhs_V_1_load" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 67 'xor' 'xor_ln1357_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node ret_V_2)   --->   "%xor_ln1357_7 = xor i8 %rhs_V_6, %rhs_V_7" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 68 'xor' 'xor_ln1357_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.66ns) (out node of the LUT)   --->   "%ret_V_2 = xor i8 %xor_ln1357_7, %xor_ln1357_6" [AES_hls_cpp/aes_cipher.cpp:103]   --->   Operation 69 'xor' 'ret_V_2' <Predicate = true> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/2] (0.00ns)   --->   "%lhs_V_2 = call fastcc i8 @gmul(i3 3, i8 %lhs_V_1_load)" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 70 'call' 'lhs_V_2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 71 [1/2] (0.00ns)   --->   "%rhs_V_8 = call fastcc i8 @gmul(i3 2, i8 %rhs_V_5_load)" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 71 'call' 'rhs_V_8' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node ret_V_3)   --->   "%xor_ln1357_9 = xor i8 %rhs_V_2_load, %rhs_V_1_load" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 72 'xor' 'xor_ln1357_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node ret_V_3)   --->   "%xor_ln1357_10 = xor i8 %lhs_V_2, %rhs_V_8" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 73 'xor' 'xor_ln1357_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.66ns) (out node of the LUT)   --->   "%ret_V_3 = xor i8 %xor_ln1357_10, %xor_ln1357_9" [AES_hls_cpp/aes_cipher.cpp:104]   --->   Operation 74 'xor' 'ret_V_3' <Predicate = true> <Delay = 0.66> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (1.18ns)   --->   "br label %3" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 75 'br' <Predicate = true> <Delay = 1.18>

State 6 <SV = 4> <Delay = 2.79>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%r2_0 = phi i3 [ 0, %2 ], [ %r_1, %4 ]"   --->   Operation 76 'phi' 'r2_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.86ns)   --->   "%icmp_ln106 = icmp eq i3 %r2_0, -4" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 77 'icmp' 'icmp_ln106' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 78 'speclooptripcount' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.18ns)   --->   "%r_1 = add i3 %r2_0, 1" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 79 'add' 'r_1' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "br i1 %icmp_ln106, label %.loopexit.loopexit, label %4" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_5 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %r2_0, i2 0)" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 81 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln321_2 = zext i5 %tmp_5 to i6" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 82 'zext' 'zext_ln321_2' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (1.36ns)   --->   "%add_ln321_1 = add i6 %zext_ln321_2, %zext_ln99" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 83 'add' 'add_ln321_1' <Predicate = (!icmp_ln106)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln321_3 = zext i6 %add_ln321_1 to i64" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 84 'zext' 'zext_ln321_3' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%state_V_addr_4 = getelementptr [16 x i8]* %state_V, i64 0, i64 %zext_ln321_3" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 85 'getelementptr' 'state_V_addr_4' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln321_1 = trunc i3 %r2_0 to i2" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 86 'trunc' 'trunc_ln321_1' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (1.26ns)   --->   "%tmp = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %ret_V, i8 %ret_V_1, i8 %ret_V_2, i8 %ret_V_3, i2 %trunc_ln321_1)" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 87 'mux' 'tmp' <Predicate = (!icmp_ln106)> <Delay = 1.26> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/1] (1.42ns)   --->   "store i8 %tmp, i8* %state_V_addr_4, align 1" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 88 'store' <Predicate = (!icmp_ln106)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "br label %3" [AES_hls_cpp/aes_cipher.cpp:106]   --->   Operation 89 'br' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 90 'br' <Predicate = (icmp_ln106)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c') with incoming values : ('c', AES_hls_cpp/aes_cipher.cpp:97) [8]  (1.18 ns)

 <State 2>: 1.18ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', AES_hls_cpp/aes_cipher.cpp:97) [8]  (0 ns)
	'add' operation ('c', AES_hls_cpp/aes_cipher.cpp:97) [11]  (1.18 ns)

 <State 3>: 2.79ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', AES_hls_cpp/aes_cipher.cpp:99) [17]  (0 ns)
	'add' operation ('add_ln321', AES_hls_cpp/aes_cipher.cpp:99) [25]  (1.37 ns)
	'getelementptr' operation ('state_V_addr', AES_hls_cpp/aes_cipher.cpp:99) [27]  (0 ns)
	'load' operation ('a[0].V', AES_hls_cpp/aes_cipher.cpp:99) on array 'state_V' [28]  (1.43 ns)

 <State 4>: 1.43ns
The critical path consists of the following:
	'load' operation ('a[0].V', AES_hls_cpp/aes_cipher.cpp:99) on array 'state_V' [28]  (1.43 ns)
	'store' operation ('store_ln99', AES_hls_cpp/aes_cipher.cpp:99) of variable 'a[0].V', AES_hls_cpp/aes_cipher.cpp:99 on local variable 'lhs.V' [38]  (0 ns)

 <State 5>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r') with incoming values : ('r', AES_hls_cpp/aes_cipher.cpp:106) [72]  (1.18 ns)

 <State 6>: 2.79ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', AES_hls_cpp/aes_cipher.cpp:106) [72]  (0 ns)
	'add' operation ('add_ln321_1', AES_hls_cpp/aes_cipher.cpp:106) [80]  (1.37 ns)
	'getelementptr' operation ('state_V_addr_4', AES_hls_cpp/aes_cipher.cpp:106) [82]  (0 ns)
	'store' operation ('store_ln106', AES_hls_cpp/aes_cipher.cpp:106) of variable 'tmp', AES_hls_cpp/aes_cipher.cpp:106 on array 'state_V' [85]  (1.43 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
